#nullable enable
using Neatoo.RemoteFactory;
using Neatoo.RemoteFactory.Internal;
using Microsoft.Extensions.DependencyInjection;
using static Neatoo.RemoteFactory.FactoryGeneratorTests.Factory.ConstructorCreateTests;
using Neatoo.RemoteFactory.FactoryGeneratorTests.Shared;

/*
							READONLY - DO NOT EDIT!!!!
							Generated by Neatoo.RemoteFactory
*/
namespace Neatoo.RemoteFactory.FactoryGeneratorTests.Factory
{
    public interface IConstructorCreateObjectParamsDepFactory
    {
        ConstructorCreateObjectParamsDep Create(Guid param);
    }

    internal class ConstructorCreateObjectParamsDepFactory : FactoryBase<ConstructorCreateObjectParamsDep>, IConstructorCreateObjectParamsDepFactory
    {
        private readonly IServiceProvider ServiceProvider;
        private readonly IMakeRemoteDelegateRequest? MakeRemoteDelegateRequest;
        // Delegates
        // Delegate Properties to provide Local or Remote fork in execution
        public ConstructorCreateObjectParamsDepFactory(IServiceProvider serviceProvider, IFactoryCore<ConstructorCreateObjectParamsDep> factoryCore) : base(factoryCore)
        {
            this.ServiceProvider = serviceProvider;
        }

        public ConstructorCreateObjectParamsDepFactory(IServiceProvider serviceProvider, IMakeRemoteDelegateRequest remoteMethodDelegate, IFactoryCore<ConstructorCreateObjectParamsDep> factoryCore) : base(factoryCore)
        {
            this.ServiceProvider = serviceProvider;
            this.MakeRemoteDelegateRequest = remoteMethodDelegate;
        }

        public virtual ConstructorCreateObjectParamsDep Create(Guid param)
        {
            return LocalCreate(param);
        }

        public ConstructorCreateObjectParamsDep LocalCreate(Guid param)
        {
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCall(FactoryOperation.Create, () => new ConstructorCreateObjectParamsDep(param, service));
        }

        public static void FactoryServiceRegistrar(IServiceCollection services, NeatooFactory remoteLocal)
        {
            services.AddScoped<ConstructorCreateObjectParamsDepFactory>();
            services.AddScoped<IConstructorCreateObjectParamsDepFactory, ConstructorCreateObjectParamsDepFactory>();
        }
    }
}