#nullable enable
using Neatoo.RemoteFactory;
using Neatoo.RemoteFactory.Internal;
using Microsoft.Extensions.DependencyInjection;
using static Neatoo.RemoteFactory.FactoryGeneratorTests.Factory.FactoryOnStartCompleteTests;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static Neatoo.RemoteFactory.FactoryGeneratorTests.Factory.ReadTests;
using Neatoo.RemoteFactory.FactoryGeneratorTests;
using Neatoo.RemoteFactory.FactoryGeneratorTests.Shared;
using Xunit;

/*
							READONLY - DO NOT EDIT!!!!
							Generated by Neatoo.RemoteFactory
*/
namespace Neatoo.RemoteFactory.FactoryGeneratorTests.Factory
{
    public interface IFactoryOnStartCompleteObjFactory
    {
        FactoryOnStartCompleteObj Create();
        FactoryOnStartCompleteObj Fetch();
        FactoryOnStartCompleteObj CreateVoid();
        FactoryOnStartCompleteObj? CreateBool();
        Task<FactoryOnStartCompleteObj> CreateTask();
        Task<FactoryOnStartCompleteObj?> CreateTaskBool();
        FactoryOnStartCompleteObj CreateVoidDep();
        FactoryOnStartCompleteObj? CreateBoolTrueDep();
        FactoryOnStartCompleteObj? CreateBoolFalseDep();
        Task<FactoryOnStartCompleteObj> CreateTaskDep();
        Task<FactoryOnStartCompleteObj?> CreateTaskBoolDep();
        Task<FactoryOnStartCompleteObj?> CreateTaskBoolFalseDep();
        FactoryOnStartCompleteObj FetchVoid();
        FactoryOnStartCompleteObj? FetchBool();
        Task<FactoryOnStartCompleteObj> FetchTask();
        Task<FactoryOnStartCompleteObj?> FetchTaskBool();
        FactoryOnStartCompleteObj FetchVoidDep();
        FactoryOnStartCompleteObj? FetchBoolTrueDep();
        FactoryOnStartCompleteObj? FetchBoolFalseDep();
        Task<FactoryOnStartCompleteObj> FetchTaskDep();
        Task<FactoryOnStartCompleteObj?> FetchTaskBoolDep();
        FactoryOnStartCompleteObj CreateVoid(int? param);
        FactoryOnStartCompleteObj? CreateBool(int? param);
        Task<FactoryOnStartCompleteObj> CreateTask(int? param);
        Task<FactoryOnStartCompleteObj?> CreateTaskBool(int? param);
        Task<FactoryOnStartCompleteObj?> CreateTaskBoolFalse(int? param);
        FactoryOnStartCompleteObj CreateVoidDep(int? param);
        FactoryOnStartCompleteObj? CreateBoolTrueDep(int? param);
        FactoryOnStartCompleteObj? CreateBoolFalseDep(int? param);
        Task<FactoryOnStartCompleteObj> CreateTaskDep(int? param);
        Task<FactoryOnStartCompleteObj?> CreateTaskBoolDep(int? param);
        FactoryOnStartCompleteObj FetchVoid(int? param);
        FactoryOnStartCompleteObj? FetchBool(int? param);
        Task<FactoryOnStartCompleteObj> FetchTask(int? param);
        Task<FactoryOnStartCompleteObj?> FetchTaskBool(int? param);
        FactoryOnStartCompleteObj FetchVoidDep(int? param);
        FactoryOnStartCompleteObj? FetchBoolTrueDep(int? param);
        FactoryOnStartCompleteObj? FetchBoolFalseDep(int? param);
        Task<FactoryOnStartCompleteObj> FetchTaskDep(int? param);
        Task<FactoryOnStartCompleteObj?> FetchTaskBoolDep(int? param);
        Task<FactoryOnStartCompleteObj?> FetchTaskBoolFalseDep(int? param);
    }

    internal class FactoryOnStartCompleteObjFactory : FactoryBase<FactoryOnStartCompleteObj>, IFactoryOnStartCompleteObjFactory
    {
        private readonly IServiceProvider ServiceProvider;
        public FactoryOnStartCompleteObjFactory(IServiceProvider serviceProvider, IFactoryCore<FactoryOnStartCompleteObj> factoryCore) : base(factoryCore)
        {
            this.ServiceProvider = serviceProvider;
        }

        public FactoryOnStartCompleteObjFactory(IServiceProvider serviceProvider, IMakeRemoteDelegateRequest remoteMethodDelegate, IFactoryCore<FactoryOnStartCompleteObj> factoryCore) : base(factoryCore)
        {
            this.ServiceProvider = serviceProvider;
        }

        public virtual FactoryOnStartCompleteObj Create()
        {
            return LocalCreate();
        }

        public FactoryOnStartCompleteObj LocalCreate()
        {
            return DoFactoryMethodCall(FactoryOperation.Create, () => new FactoryOnStartCompleteObj());
        }

        public virtual FactoryOnStartCompleteObj Fetch()
        {
            return LocalFetch();
        }

        public FactoryOnStartCompleteObj LocalFetch()
        {
            return DoFactoryMethodCall(FactoryOperation.Fetch, () => new FactoryOnStartCompleteObj());
        }

        public virtual FactoryOnStartCompleteObj CreateVoid()
        {
            return LocalCreateVoid();
        }

        public FactoryOnStartCompleteObj LocalCreateVoid()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCall(target, FactoryOperation.Create, () => target.CreateVoid());
        }

        public virtual FactoryOnStartCompleteObj? CreateBool()
        {
            return LocalCreateBool();
        }

        public FactoryOnStartCompleteObj? LocalCreateBool()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Create, () => target.CreateBool());
        }

        public virtual Task<FactoryOnStartCompleteObj> CreateTask()
        {
            return LocalCreateTask();
        }

        public Task<FactoryOnStartCompleteObj> LocalCreateTask()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallAsync(target, FactoryOperation.Create, () => target.CreateTask());
        }

        public virtual Task<FactoryOnStartCompleteObj?> CreateTaskBool()
        {
            return LocalCreateTaskBool();
        }

        public Task<FactoryOnStartCompleteObj?> LocalCreateTaskBool()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Create, () => target.CreateTaskBool());
        }

        public virtual FactoryOnStartCompleteObj CreateVoidDep()
        {
            return LocalCreateVoidDep();
        }

        public FactoryOnStartCompleteObj LocalCreateVoidDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCall(target, FactoryOperation.Create, () => target.CreateVoidDep(service));
        }

        public virtual FactoryOnStartCompleteObj? CreateBoolTrueDep()
        {
            return LocalCreateBoolTrueDep();
        }

        public FactoryOnStartCompleteObj? LocalCreateBoolTrueDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Create, () => target.CreateBoolTrueDep(service));
        }

        public virtual FactoryOnStartCompleteObj? CreateBoolFalseDep()
        {
            return LocalCreateBoolFalseDep();
        }

        public FactoryOnStartCompleteObj? LocalCreateBoolFalseDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Create, () => target.CreateBoolFalseDep(service));
        }

        public virtual Task<FactoryOnStartCompleteObj> CreateTaskDep()
        {
            return LocalCreateTaskDep();
        }

        public Task<FactoryOnStartCompleteObj> LocalCreateTaskDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallAsync(target, FactoryOperation.Create, () => target.CreateTaskDep(service));
        }

        public virtual Task<FactoryOnStartCompleteObj?> CreateTaskBoolDep()
        {
            return LocalCreateTaskBoolDep();
        }

        public Task<FactoryOnStartCompleteObj?> LocalCreateTaskBoolDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Create, () => target.CreateTaskBoolDep(service));
        }

        public virtual Task<FactoryOnStartCompleteObj?> CreateTaskBoolFalseDep()
        {
            return LocalCreateTaskBoolFalseDep();
        }

        public Task<FactoryOnStartCompleteObj?> LocalCreateTaskBoolFalseDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Create, () => target.CreateTaskBoolFalseDep(service));
        }

        public virtual FactoryOnStartCompleteObj FetchVoid()
        {
            return LocalFetchVoid();
        }

        public FactoryOnStartCompleteObj LocalFetchVoid()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCall(target, FactoryOperation.Fetch, () => target.FetchVoid());
        }

        public virtual FactoryOnStartCompleteObj? FetchBool()
        {
            return LocalFetchBool();
        }

        public FactoryOnStartCompleteObj? LocalFetchBool()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Fetch, () => target.FetchBool());
        }

        public virtual Task<FactoryOnStartCompleteObj> FetchTask()
        {
            return LocalFetchTask();
        }

        public Task<FactoryOnStartCompleteObj> LocalFetchTask()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallAsync(target, FactoryOperation.Fetch, () => target.FetchTask());
        }

        public virtual Task<FactoryOnStartCompleteObj?> FetchTaskBool()
        {
            return LocalFetchTaskBool();
        }

        public Task<FactoryOnStartCompleteObj?> LocalFetchTaskBool()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Fetch, () => target.FetchTaskBool());
        }

        public virtual FactoryOnStartCompleteObj FetchVoidDep()
        {
            return LocalFetchVoidDep();
        }

        public FactoryOnStartCompleteObj LocalFetchVoidDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCall(target, FactoryOperation.Fetch, () => target.FetchVoidDep(service));
        }

        public virtual FactoryOnStartCompleteObj? FetchBoolTrueDep()
        {
            return LocalFetchBoolTrueDep();
        }

        public FactoryOnStartCompleteObj? LocalFetchBoolTrueDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Fetch, () => target.FetchBoolTrueDep(service));
        }

        public virtual FactoryOnStartCompleteObj? FetchBoolFalseDep()
        {
            return LocalFetchBoolFalseDep();
        }

        public FactoryOnStartCompleteObj? LocalFetchBoolFalseDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Fetch, () => target.FetchBoolFalseDep(service));
        }

        public virtual Task<FactoryOnStartCompleteObj> FetchTaskDep()
        {
            return LocalFetchTaskDep();
        }

        public Task<FactoryOnStartCompleteObj> LocalFetchTaskDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallAsync(target, FactoryOperation.Fetch, () => target.FetchTaskDep(service));
        }

        public virtual Task<FactoryOnStartCompleteObj?> FetchTaskBoolDep()
        {
            return LocalFetchTaskBoolDep();
        }

        public Task<FactoryOnStartCompleteObj?> LocalFetchTaskBoolDep()
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Fetch, () => target.FetchTaskBoolDep(service));
        }

        public virtual FactoryOnStartCompleteObj CreateVoid(int? param)
        {
            return LocalCreateVoid1(param);
        }

        public FactoryOnStartCompleteObj LocalCreateVoid1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCall(target, FactoryOperation.Create, () => target.CreateVoid(param));
        }

        public virtual FactoryOnStartCompleteObj? CreateBool(int? param)
        {
            return LocalCreateBool1(param);
        }

        public FactoryOnStartCompleteObj? LocalCreateBool1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Create, () => target.CreateBool(param));
        }

        public virtual Task<FactoryOnStartCompleteObj> CreateTask(int? param)
        {
            return LocalCreateTask1(param);
        }

        public Task<FactoryOnStartCompleteObj> LocalCreateTask1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallAsync(target, FactoryOperation.Create, () => target.CreateTask(param));
        }

        public virtual Task<FactoryOnStartCompleteObj?> CreateTaskBool(int? param)
        {
            return LocalCreateTaskBool1(param);
        }

        public Task<FactoryOnStartCompleteObj?> LocalCreateTaskBool1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Create, () => target.CreateTaskBool(param));
        }

        public virtual Task<FactoryOnStartCompleteObj?> CreateTaskBoolFalse(int? param)
        {
            return LocalCreateTaskBoolFalse(param);
        }

        public Task<FactoryOnStartCompleteObj?> LocalCreateTaskBoolFalse(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Create, () => target.CreateTaskBoolFalse(param));
        }

        public virtual FactoryOnStartCompleteObj CreateVoidDep(int? param)
        {
            return LocalCreateVoidDep1(param);
        }

        public FactoryOnStartCompleteObj LocalCreateVoidDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCall(target, FactoryOperation.Create, () => target.CreateVoidDep(param, service));
        }

        public virtual FactoryOnStartCompleteObj? CreateBoolTrueDep(int? param)
        {
            return LocalCreateBoolTrueDep1(param);
        }

        public FactoryOnStartCompleteObj? LocalCreateBoolTrueDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Create, () => target.CreateBoolTrueDep(param, service));
        }

        public virtual FactoryOnStartCompleteObj? CreateBoolFalseDep(int? param)
        {
            return LocalCreateBoolFalseDep1(param);
        }

        public FactoryOnStartCompleteObj? LocalCreateBoolFalseDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Create, () => target.CreateBoolFalseDep(param, service));
        }

        public virtual Task<FactoryOnStartCompleteObj> CreateTaskDep(int? param)
        {
            return LocalCreateTaskDep1(param);
        }

        public Task<FactoryOnStartCompleteObj> LocalCreateTaskDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallAsync(target, FactoryOperation.Create, () => target.CreateTaskDep(param, service));
        }

        public virtual Task<FactoryOnStartCompleteObj?> CreateTaskBoolDep(int? param)
        {
            return LocalCreateTaskBoolDep1(param);
        }

        public Task<FactoryOnStartCompleteObj?> LocalCreateTaskBoolDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Create, () => target.CreateTaskBoolDep(param, service));
        }

        public virtual FactoryOnStartCompleteObj FetchVoid(int? param)
        {
            return LocalFetchVoid1(param);
        }

        public FactoryOnStartCompleteObj LocalFetchVoid1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCall(target, FactoryOperation.Fetch, () => target.FetchVoid(param));
        }

        public virtual FactoryOnStartCompleteObj? FetchBool(int? param)
        {
            return LocalFetchBool1(param);
        }

        public FactoryOnStartCompleteObj? LocalFetchBool1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Fetch, () => target.FetchBool(param));
        }

        public virtual Task<FactoryOnStartCompleteObj> FetchTask(int? param)
        {
            return LocalFetchTask1(param);
        }

        public Task<FactoryOnStartCompleteObj> LocalFetchTask1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallAsync(target, FactoryOperation.Fetch, () => target.FetchTask(param));
        }

        public virtual Task<FactoryOnStartCompleteObj?> FetchTaskBool(int? param)
        {
            return LocalFetchTaskBool1(param);
        }

        public Task<FactoryOnStartCompleteObj?> LocalFetchTaskBool1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Fetch, () => target.FetchTaskBool(param));
        }

        public virtual FactoryOnStartCompleteObj FetchVoidDep(int? param)
        {
            return LocalFetchVoidDep1(param);
        }

        public FactoryOnStartCompleteObj LocalFetchVoidDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCall(target, FactoryOperation.Fetch, () => target.FetchVoidDep(param, service));
        }

        public virtual FactoryOnStartCompleteObj? FetchBoolTrueDep(int? param)
        {
            return LocalFetchBoolTrueDep1(param);
        }

        public FactoryOnStartCompleteObj? LocalFetchBoolTrueDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Fetch, () => target.FetchBoolTrueDep(param, service));
        }

        public virtual FactoryOnStartCompleteObj? FetchBoolFalseDep(int? param)
        {
            return LocalFetchBoolFalseDep1(param);
        }

        public FactoryOnStartCompleteObj? LocalFetchBoolFalseDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBool(target, FactoryOperation.Fetch, () => target.FetchBoolFalseDep(param, service));
        }

        public virtual Task<FactoryOnStartCompleteObj> FetchTaskDep(int? param)
        {
            return LocalFetchTaskDep1(param);
        }

        public Task<FactoryOnStartCompleteObj> LocalFetchTaskDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallAsync(target, FactoryOperation.Fetch, () => target.FetchTaskDep(param, service));
        }

        public virtual Task<FactoryOnStartCompleteObj?> FetchTaskBoolDep(int? param)
        {
            return LocalFetchTaskBoolDep1(param);
        }

        public Task<FactoryOnStartCompleteObj?> LocalFetchTaskBoolDep1(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Fetch, () => target.FetchTaskBoolDep(param, service));
        }

        public virtual Task<FactoryOnStartCompleteObj?> FetchTaskBoolFalseDep(int? param)
        {
            return LocalFetchTaskBoolFalseDep(param);
        }

        public Task<FactoryOnStartCompleteObj?> LocalFetchTaskBoolFalseDep(int? param)
        {
            var target = ServiceProvider.GetRequiredService<FactoryOnStartCompleteObj>();
            var service = ServiceProvider.GetRequiredService<IService>();
            return DoFactoryMethodCallBoolAsync(target, FactoryOperation.Fetch, () => target.FetchTaskBoolFalseDep(param, service));
        }

        public static void FactoryServiceRegistrar(IServiceCollection services, NeatooFactory remoteLocal)
        {
            services.AddScoped<FactoryOnStartCompleteObjFactory>();
            services.AddScoped<IFactoryOnStartCompleteObjFactory, FactoryOnStartCompleteObjFactory>();
            services.AddTransient<FactoryOnStartCompleteObj>();
        }
    }
}