// <auto-generated />
using System;
using HorseFarm.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HorseFarm.Ef.Migrations
{
    [DbContext(typeof(HorseFarmContext))]
    [Migration("20250310022513_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("HorseFarm.Ef.CartEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CartType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorseFarmId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfHorses")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HorseFarmId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("HorseFarm.Ef.HorseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Breed")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CartId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PastureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("PastureId");

                    b.ToTable("Horse");
                });

            modelBuilder.Entity("HorseFarm.Ef.HorseFarmEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("HorseFarm");
                });

            modelBuilder.Entity("HorseFarm.Ef.PastureEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorseFarmId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HorseFarmId")
                        .IsUnique();

                    b.ToTable("Pasture");
                });

            modelBuilder.Entity("HorseFarm.Ef.CartEntity", b =>
                {
                    b.HasOne("HorseFarm.Ef.HorseFarmEntity", "HorseFarm")
                        .WithMany("Carts")
                        .HasForeignKey("HorseFarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HorseFarm");
                });

            modelBuilder.Entity("HorseFarm.Ef.HorseEntity", b =>
                {
                    b.HasOne("HorseFarm.Ef.CartEntity", "Cart")
                        .WithMany("Horses")
                        .HasForeignKey("CartId");

                    b.HasOne("HorseFarm.Ef.PastureEntity", "Pasture")
                        .WithMany("Horses")
                        .HasForeignKey("PastureId");

                    b.Navigation("Cart");

                    b.Navigation("Pasture");
                });

            modelBuilder.Entity("HorseFarm.Ef.PastureEntity", b =>
                {
                    b.HasOne("HorseFarm.Ef.HorseFarmEntity", "HorseFarm")
                        .WithOne("Pasture")
                        .HasForeignKey("HorseFarm.Ef.PastureEntity", "HorseFarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HorseFarm");
                });

            modelBuilder.Entity("HorseFarm.Ef.CartEntity", b =>
                {
                    b.Navigation("Horses");
                });

            modelBuilder.Entity("HorseFarm.Ef.HorseFarmEntity", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Pasture")
                        .IsRequired();
                });

            modelBuilder.Entity("HorseFarm.Ef.PastureEntity", b =>
                {
                    b.Navigation("Horses");
                });
#pragma warning restore 612, 618
        }
    }
}
