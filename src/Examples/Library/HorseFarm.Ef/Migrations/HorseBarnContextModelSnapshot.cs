// <auto-generated />
using System;
using HorseFarm.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HorseFarm.Ef.Migrations;

[DbContext(typeof(HorseFarmContext))]
partial class HorseFarmContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

        modelBuilder.Entity("HorseFarm.Ef.Cart", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("CartType")
                    .HasColumnType("INTEGER");

                b.Property<int>("HorseFarmId")
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<int>("NumberOfHorses")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("HorseFarmId");

                b.ToTable("Cart");
            });

        modelBuilder.Entity("HorseFarm.Ef.Horse", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<DateOnly>("BirthDate")
                    .HasColumnType("TEXT");

                b.Property<int>("Breed")
                    .HasColumnType("INTEGER");

                b.Property<int?>("CartId")
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<int?>("PastureId")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("CartId");

                b.HasIndex("PastureId");

                b.ToTable("Horse");
            });

        modelBuilder.Entity("HorseFarm.Ef.HorseFarm", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.ToTable("HorseFarm");
            });

        modelBuilder.Entity("HorseFarm.Ef.Pasture", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("HorseFarmId")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("HorseFarmId")
                    .IsUnique();

                b.ToTable("Pasture");
            });

        modelBuilder.Entity("HorseFarm.Ef.Cart", b =>
            {
                b.HasOne("HorseFarm.Ef.HorseFarm", "HorseFarm")
                    .WithMany("Carts")
                    .HasForeignKey("HorseFarmId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("HorseFarm");
            });

        modelBuilder.Entity("HorseFarm.Ef.Horse", b =>
            {
                b.HasOne("HorseFarm.Ef.Cart", "Cart")
                    .WithMany("Horses")
                    .HasForeignKey("CartId");

                b.HasOne("HorseFarm.Ef.Pasture", null)
                    .WithMany("Horses")
                    .HasForeignKey("PastureId");

                b.Navigation("Cart");
            });

        modelBuilder.Entity("HorseFarm.Ef.Pasture", b =>
            {
                b.HasOne("HorseFarm.Ef.HorseFarm", "HorseFarm")
                    .WithOne("Pasture")
                    .HasForeignKey("HorseFarm.Ef.Pasture", "HorseFarmId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("HorseFarm");
            });

        modelBuilder.Entity("HorseFarm.Ef.Cart", b =>
            {
                b.Navigation("Horses");
            });

        modelBuilder.Entity("HorseFarm.Ef.HorseFarm", b =>
            {
                b.Navigation("Carts");

                b.Navigation("Pasture")
                    .IsRequired();
            });

        modelBuilder.Entity("HorseFarm.Ef.Pasture", b =>
            {
                b.Navigation("Horses");
            });
#pragma warning restore 612, 618
    }
}
